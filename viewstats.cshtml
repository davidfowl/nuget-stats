@{       
    if (Request["chart"] == "downloadsperhour") {
        var stats = NuGetStatistics.GetStatsHistory(100);
        var statDiffs = new List<object>();
        dynamic previous = stats.Last();
        foreach (var current in stats.Reverse().Skip(1)) {
            statDiffs.Add(new { Downloads = Math.Max(0, current.Downloads - previous.Downloads), LogTime = (DateTime)current.LogTime });
            previous = current;
        }

        new Chart(600, 300, themePath: "DiffChartTemplate.xml")
            .AddSeries(chartType: "Spline", xValue: statDiffs, xField: "LogTime", yValues: statDiffs, yFields: "Downloads")
            .AddTitle("Hourly Downloads")
            .Write(format: "png");
    }
    else if (Request["chart"] == "uploadsperday") {
        var stats = NuGetStatistics.GetStatsHistory();
        var statDiffs = new List<object>();
        dynamic previous = stats.Last();
        foreach (var current in stats.Reverse().Skip(1)) {
            statDiffs.Add(new { Uploads = Math.Max(0, current.TotalPackages - previous.TotalPackages), LogTime = (DateTime)current.LogTime });
            previous = current;
        }

        new Chart(600, 300, themePath: "ChartTemplate.xml")
            .AddSeries(chartType: "area", xValue: statDiffs, xField: "LogTime", yValues: statDiffs, yFields: "Uploads")
            .AddTitle("Daily uploads")
            .Write(format: "png");
    }
    else {
        var stats = NuGetStatistics.GetStatsHistory();
        new Chart(600, 300, themePath: "ChartTemplate.xml")
            .AddSeries(chartType: "Line", xValue: stats, xField: "LogTime", yValues: stats, yFields: "Downloads")
            .SetYAxis(min: 130000)
            .AddTitle("Total Downloads")
            .Write(format: "png");
    }
    
}
